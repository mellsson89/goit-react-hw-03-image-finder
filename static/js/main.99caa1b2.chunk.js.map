{"version":3,"sources":["components/ImageGalleryItem/styles/imageGalleryItems.module.scss","components/Button/styles/button.module.scss","components/Modal/styles/modal.module.scss","components/ImageGallery/styles/imageGallery.module.scss","styles/app.module.scss","services/gallery-api.js","components/SearchBar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Modal/Modal.js","App.js","index.js","components/SearchBar/styles/Searchbar.module.scss"],"names":["module","exports","fetchGallery","searchQuery","page","axios","get","then","data","hits","Searchbar","state","query","handleChangeQuery","e","setState","currentTarget","value","handleSubmitForm","preventDefault","props","onClick","this","className","style","SearchBar","SearchForm","onSubmit","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","imgGallery","onClickImg","map","id","webformatURL","user","src","alt","ImageGalleryItemImage","ImageGallery","Button","text","status","Container","disabled","modalRoot","document","querySelector","Modal","closeModalEscape","code","onClose","closeClickModal","target","window","addEventListener","removeEventListener","createPortal","Modal__backdrop","Modal__content","imgLarge","altImg","App","largeImageURL","isLoading","activeButton","onChangeQuery","onOpenImgGallery","find","img","onCloseImgGallery","fetchImages","prevState","scrollTo","top","documentElement","scrollHeight","behavior","finally","prevProps","color","height","width","timeout","spinner","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.99caa1b2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"imageGalleryItems_ImageGalleryItem__6Hj2W\",\"ImageGalleryItemImage\":\"imageGalleryItems_ImageGalleryItemImage__2_LRZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"button_Container__3WM2D\",\"Button\":\"button_Button__6nZOC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal__backdrop\":\"modal_Modal__backdrop__1jJ6y\",\"Modal__content\":\"modal_Modal__content__fz9pQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"imageGallery_ImageGallery__2-kFe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"app_spinner__2---I\"};","import axios from \"axios\";\n\n\nexport default function fetchGallery ({searchQuery='',page=1})  {\n    return (\n        axios.get(`https://pixabay.com/api/?q=${searchQuery}\n        &page=${page}&key=21751177-a266d6ba191f1accff72cdd2b&image_type=photo&orientation=horizontal&per_page=12`)\n    ).then(({data: {hits}}) => hits)\n}\n","import React,{Component} from \"react\";\nimport style from './styles/Searchbar.module.scss'\n\n\nclass Searchbar extends Component {\n\n    state= {\n       query:''\n    }\n\n    handleChangeQuery =(e)=> {\n        this.setState({\n            query:e.currentTarget.value\n\n        })\n    }\n\n    handleSubmitForm =(e) => {\n        e.preventDefault();\n        this.props.onClick(this.state.query);\n        this.setState({\n            query:''\n        })\n    }\n\n\n    render() {\n        const {query}=this.state;\n        return (\n            <header className={style.SearchBar}>\n                <form className={style.SearchForm} onSubmit={this.handleSubmitForm}>\n                    <button type=\"submit\" className={style.SearchFormButton}>\n                        <span className={style.SearchFormButtonLabel}>Search</span>\n                    </button>\n                    <input\n                        className={style.SearchFormInput}\n                        type=\"text\"\n                        autoComplete=\"off\"\n                        autoFocus\n                        placeholder=\"Search images and photos\"\n                        value={query}\n                        onChange={this.handleChangeQuery}\n                    />\n                </form>\n            </header>\n        )\n    }\n}\n\nexport default Searchbar;","import React from \"react\";\nimport PropTypes from 'prop-types'\nimport style from './styles/imageGalleryItems.module.scss';\n\n\nconst ImageGalleryItem =({imgGallery,onClickImg}) => (\n\n    <>\n        {imgGallery.map(({id, webformatURL, user}) => (\n            <li className={style.ImageGalleryItem} key={id}>\n                <img src={webformatURL} alt={user} className={style.ImageGalleryItemImage} onClick={()=> onClickImg(id)}/>\n            </li>\n        ))}\n    </>\n)\n\nImageGalleryItem.propTypes ={\n    imgGallery:PropTypes.arrayOf(PropTypes.shape({\n        id:PropTypes.number.isRequired,\n        webformatURL:PropTypes.string.isRequired,\n        user:PropTypes.string.isRequired\n\n    })).isRequired\n}\n\nexport default ImageGalleryItem;","import React from \"react\";\nimport ImageGalleryItem from '../ImageGalleryItem';\nimport style from './styles/imageGallery.module.scss'\n\n\n\nconst ImageGallery=({imgGallery,onClickImg}) => (\n    <ul className={style.ImageGallery}>\n<ImageGalleryItem imgGallery={imgGallery} onClickImg={onClickImg} />\n    </ul>\n)\n\n\nexport default ImageGallery;","import React from \"react\";\nimport PropTypes from 'prop-types'\nimport style from './styles/button.module.scss';\n\nconst Button = ({text,onClick,status})=> (\n    <div className={style.Container}>\n        <button type=\"button\" onClick={onClick} className={style.Button} disabled={status}>{text}</button>\n    </div>\n\n)\n\nButton.propTypes={\n    text:PropTypes.string.isRequired,\n    status:PropTypes.bool.isRequired\n}\n\nexport default Button;\n","import React,{Component} from \"react\";\nimport {createPortal} from 'react-dom';\nimport style from './styles/modal.module.scss'\n\nconst modalRoot=document.querySelector('#modal-root')\n\nclass Modal extends Component {\n\n    componentDidMount() {\n        window.addEventListener('keydown', this.closeModalEscape);\n    }\n\n    componentWillUnmount() {\nwindow.removeEventListener('keydown', this.closeModalEscape)\n    }\n\n    closeModalEscape =(e) => {\n        if (e.code === \"Escape\") {\n            this.props.onClose();\n        }\n    }\n\n    closeClickModal=(e) => {\n        if(e.target === e.currentTarget) {\n            this.props.onClose();\n        }\n    }\n\n    render() {\n        return createPortal(<div className={style.Modal__backdrop} onClick={this.closeClickModal}>\n            <div className={style.Modal__content}>\n                <img src={this.props.imgLarge} alt={this.props.altImg} /></div>\n        </div>,modalRoot)\n    }\n}\n\nexport default Modal;","import React,{Component} from \"react\";\nimport fetchGallery from './services/gallery-api'\nimport Searchbar from \"./components/SearchBar\";\nimport ImageGallery from \"./components/ImageGallery\";\nimport Button from \"./components/Button\";\nimport Modal from './components/Modal';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport Loader from \"react-loader-spinner\";\nimport style from './styles/app.module.scss'\n\n\nclass App extends Component {\n\n    state = {\n        imgGallery: [],\n        searchQuery: '',\n        page: 1,\n        largeImageURL: '',\n        isLoading: false,\n        activeButton: false\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevState.searchQuery !== this.state.searchQuery) {\n            this.fetchImages();\n        }\n    }\n\n    onChangeQuery = (query) => {\n        this.setState({\n            searchQuery: query,\n            page: 1,\n            imgGallery: [],\n        })\n    }\n\n    onOpenImgGallery = (id) => {\n        const {largeImageURL}=this.state.imgGallery.find(img => img.id === id);\n\n        this.setState({\n          largeImageURL\n        })\n    }\n\n    onCloseImgGallery = () => {\n        this.setState({\n            largeImageURL: ''\n        })\n    }\n\n\n    fetchImages = () => {\n        const {searchQuery, page} = this.state;\n\n        this.setState({\n            isLoading: true,\n            activeButton: true\n        })\n\nconst options={searchQuery,page};\n\n        fetchGallery(options)\n            .then((hits) => this.setState(prevState => ({\n                    imgGallery: [...prevState.imgGallery, ...hits],\n                    page: prevState.page + 1,\n                    activeButton: false\n\n                })\n            )).then(()=> {\n                if(page >1){\n                    window.scrollTo({\n                        top: document.documentElement.scrollHeight,\n                        behavior: 'smooth',\n                    })\n                }\n        }).finally(() => this.setState({isLoading: false}))\n\n    }\n\n    render() {\n        const {imgGallery, largeImageURL, searchQuery, isLoading, activeButton} = this.state;\n        return (\n            <>\n                <Searchbar onClick={this.onChangeQuery}/>\n                <ImageGallery imgGallery={imgGallery} onClickImg={this.onOpenImgGallery}/>\n                {isLoading &&\n                <Loader type=\"Oval\" color=\"#00BFFF\" height={30} width={30} timeout={3000} className={style.spinner}/>}\n                {imgGallery.length > 0 && !isLoading &&\n                <Button text=\"Load mode\" onClick={this.fetchImages} status={activeButton}/>}\n                {largeImageURL && <Modal onClose={this.onCloseImgGallery} imgLarge={largeImageURL} altImg={searchQuery}/>}\n\n            </>\n        )\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchBar\":\"Searchbar_SearchBar__LfKFq\",\"SearchForm\":\"Searchbar_SearchForm__6IESN\",\"SearchFormButton\":\"Searchbar_SearchFormButton__3GCFM\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__2PEo_\",\"SearchFormInput\":\"Searchbar_SearchFormInput__t3YYs\"};"],"sourceRoot":""}